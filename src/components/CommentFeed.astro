---
import type { ActionError } from "astro:actions";
import type { HydratedPost } from "../lib/fetchAllPosts";
import CommentForm from "./CommentForm.svelte";
import CommentPreview from "./CommentPreview.svelte";

export interface Props {
    postId: number;
    currentUser: HydratedPost["user"];
    comments: HydratedPost["comments"];
    error?: ActionError<any>;
}

let { postId, currentUser, comments, error } = Astro.props;
comments = comments.sort((lhs, rhs) => lhs.createdOn.getTime() - rhs.createdOn.getTime());
---

<CommentForm client:load currentUser={currentUser} error={error} postId={postId}>
    {comments.map(comment => <CommentPreview comment={comment} />)}
</CommentForm>
