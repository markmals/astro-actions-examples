---
import type { ActionError } from 'astro:actions';
import type { HydratedPost } from '../lib/fetchAllPosts';
import { CommentForm } from './CommentForm';
import { CommentPreview } from './CommentPreview';

export interface Props {
    postId: number;
    currentUser: HydratedPost['user'];
    comments: HydratedPost['comments'];
    error?: ActionError<any>;
}

let { postId, currentUser, comments, error } = Astro.props;
comments = comments.sort((lhs, rhs) => lhs.createdOn.getTime() - rhs.createdOn.getTime());
---

<CommentForm
    client:load
    currentUser={currentUser}
    error={error}
    postId={postId}
    commentId={crypto.randomUUID()}
>
    <ul role="list" class="comment-feed">
        {comments.map((comment) => <CommentPreview comment={comment} />)}
    </ul>
</CommentForm>
