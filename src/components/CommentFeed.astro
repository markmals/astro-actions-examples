---
import type { ActionError } from "astro:actions";
import type { HydratedPost } from "~/lib/fetch-all-posts";
import { CommentFormElement } from "~/custom-elements/ui-comment-form";
import { CommentPreviewElement } from "~/custom-elements/ui-comment-preview";

export interface Props {
    postId: number;
    currentUser: HydratedPost["user"];
    comments: HydratedPost["comments"];
    error?: ActionError<any>;
}

let { postId, currentUser, comments, error } = Astro.props;
comments = comments.sort((lhs, rhs) => lhs.createdOn.getTime() - rhs.createdOn.getTime());
---

<CommentFormElement
    client:load
    data-current-user={JSON.stringify(currentUser)}
    data-error={JSON.stringify(error)}
    data-post-id={postId}
    data-comment-id={crypto.randomUUID()}
>
    {comments.map(comment => <CommentPreviewElement data-comment={JSON.stringify(comment)} />)}
</CommentFormElement>
