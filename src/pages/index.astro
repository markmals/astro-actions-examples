---
import { ViewTransitions } from 'astro:transitions';
import { fetchAllPosts } from '../lib/fetchAllPosts';
import PostCard from '../components/PostCard.astro';
import { fetchCurrentUser } from '../lib/fetchCurrentUser';

import '../styles/styles.css';
import { actions } from 'astro:actions';

const currentUser = await fetchCurrentUser(Astro);
const { allPosts, likedPosts } = await fetchAllPosts();

const commentResult = Astro.getActionResult(actions.comment);
const erroredPost = commentResult?.error?.message.split(':')[0];
---

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>Vue Astro Actions</title>
        <ViewTransitions />
    </head>
    <body>
        <h1>
            React Astro Actions
            <img
                class="logo"
                src="https://upload.wikimedia.org/wikipedia/commons/3/30/React_Logo_SVG.svg"
            />
            +
            <img class="logo" src="https://astro.build/assets/press/astro-icon-dark.svg" />
        </h1>
        <ul class="feed">
            {
                allPosts.map((post) => (
                    <PostCard
                        post={post}
                        error={
                            erroredPost === post.id.toString() ? commentResult?.error : undefined
                        }
                        currentUser={currentUser}
                        currentUserHasLikedPost={likedPosts.includes(post.id)}
                    />
                ))
            }
        </ul>
    </body>
</html>
